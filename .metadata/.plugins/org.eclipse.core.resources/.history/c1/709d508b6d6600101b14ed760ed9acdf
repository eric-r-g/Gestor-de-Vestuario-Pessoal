package managers;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import java.util.UUID;

import erros.ArrayCheiaException;
import erros.ArrayVaziaException;
import erros.ElementoExistenteException;
import erros.ElementoInexistenteException;
import itens.Acessorio;
import itens.Calcado;
import itens.Item;
import itens.Look;
import itens.PecaInferior;
import itens.PecaSuperior;
import itens.PecaUnica;
import repositorios.RepositorioLooks;

public class LookManager extends ManagerBase<Look>{
	public LookManager() {
		super(new RepositorioLooks());
	}
    public void atualizarBD() {
    	
    }
    public void inicializarDados() {
    	
    }
    
    public void adicionarLook(Calcado calcado, PecaUnica unica) throws ElementoExistenteException, ArrayCheiaException {
    	Look novo = new Look(unica, calcado);
    	repositorio.inserirElemento(novo);
    }
    
    public void adicionarLook(Calcado calcado, PecaSuperior superior, PecaInferior inferior) throws ElementoExistenteException, ArrayCheiaException {
    	Look novo = new Look(superior, inferior, calcado);
    	repositorio.inserirElemento(novo);
    }
    
    public void adicionarLook(Calcado calcado, PecaUnica unica, Acessorio acessorio) throws ElementoExistenteException, ArrayCheiaException {
    	Look novo = new Look(unica, calcado);
    	novo.atualizarLook(acessorio);
    	repositorio.inserirElemento(novo);
    }
    
    public void adicionarLook(Calcado calcado, PecaSuperior superior, PecaInferior inferior, Acessorio acessorio) throws ElementoExistenteException, ArrayCheiaException {
    	Look novo = new Look(superior, inferior, calcado);
    	novo.atualizarLook(acessorio);
    	repositorio.inserirElemento(novo);
    }
    
    public void atualizarLook(Look look, ArrayList <Item> itens) throws ElementoInexistenteException, ArrayVaziaException  {
    	((RepositorioLooks) repositorio).atualizarElemento(look, itens);
    }
    
    public void utilizarLook(Look look, String local, int ano, Month mes, int dia) throws ElementoInexistenteException, ArrayVaziaException {
    	LocalDate data = LocalDate.of(ano, mes, dia);
    	((RepositorioLooks) repositorio).utilizarLook(look, local, data);
    }
    
    public Look RetornarItemPorId(UUID id) throws ArrayVaziaException, ElementoInexistenteException {
		return ((RepositorioLooks) repositorio).RetornarLookPorId(id);
    }
}
