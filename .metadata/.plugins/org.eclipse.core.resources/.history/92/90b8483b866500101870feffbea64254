package repositorios;

import erros.ArrayCheiaException;
import erros.ArrayVaziaException;
import erros.ElementoExistenteException;
import erros.ElementoInexistenteException;
import itens.IEmprestavel;
import itens.Item;

import java.util.ArrayList;

public class RepositorioItem {
	private ArrayList <IEmprestavel> itens;
	private final int tamanhoMax;
	
	public RepositorioItem() {
		tamanhoMax = 100;
		itens = new ArrayList <IEmprestavel>();
	}
	
	public RepositorioItem(int tamMax) {
		tamanhoMax = tamMax;
		itens = new ArrayList <IEmprestavel>();
	}
	
	public int getTamanho() { return itens.size(); }
	public ArrayList<IEmprestavel> getItens() throws ArrayVaziaException {
		if(itens.size() == 0) {
			throw new ArrayVaziaException("Array está vazia");
		}
		return itens; 
	}

	public void inserirItem(IEmprestavel novo) throws ArrayCheiaException, ElementoExistenteException {
		if (itens.size() == tamanhoMax) {
			throw new ArrayCheiaException("Array está vazia");			
		}
		for(IEmprestavel item : itens) {
			if(item.equals(novo)) {
				throw new ElementoExistenteException("Elemento já existente");
			}
		}
		itens.add(novo);
	}
	
	// talvez trocar por UUID
	public void removerItem(IEmprestavel item) throws ElementoInexistenteException, ArrayVaziaException {
		if (itens.size() == 0) { 
			throw new ArrayVaziaException("Array está vazia");	
		}
		boolean remocao = false;
		
		for(int i = 0; i < itens.size(); ++i) {
			if (itens.get(i).equals(item)) {
				itens.remove(i);
				break;
			}
		}
		
		if(!remocao) {
			throw new ElementoInexistenteException("Item inexistente");		
		}
	}
	
	public void atualizarItem(IEmprestavel item, IEmprestavel atualizado) throws ElementoInexistenteException, ArrayVaziaException {
		if (itens.size() == 0) { 
			throw new ArrayVaziaException("Array está vazia");	
		}
		boolean atualizacao = false;
		
		for(int i = 0; i < itens.size(); ++i) {
			if (itens.get(i).equals(item)) {
				itens.set(i, atualizado);
				break;
			}
		}
		
		if(!atualizacao) {
			throw new ElementoInexistenteException("Item inexistente");		
		}
	}
}