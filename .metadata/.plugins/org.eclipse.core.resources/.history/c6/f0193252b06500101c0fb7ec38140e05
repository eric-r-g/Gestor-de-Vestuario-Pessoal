package itens;

import java.util.Objects;

// item genérico do vestuario
public abstract class Item {
	private String modelo;
	private String lojaOrigem;
	private double preco;
	private int numeroDeUsos;
	
	public enum estadosConservacao{
		NOVO("novo"), 
		USADO("usado"), 
		DANIFICADO("danificado");
		
		private final String status;
		
		private estadosConservacao(String status) {
			this.status = status;
		}
		
		public String toString() {
			return status;
		}
		
		public static estadosConservacao fromString(String texto) {
	        for (estadosConservacao estado : estadosConservacao.values()) {
	            if (estado.status.equalsIgnoreCase(texto)) { // Comparação case-insensitive
	                return estado;
	            }
	        }
	        throw new IllegalArgumentException("Estado de conservação inválido: " + texto);
	    }
	}
	
	public enum tipoItem{
		ACESSORIO("acessorio"), 
		CALCADO("calcado"), 
		INFERIOR("inferior"),
		SUPERIOR("superior"),
		UNICA("unica"),
		INTIMA("intima");
		
		private final String tipo;
		
		private tipoItem(String tipo) { this.tipo = tipo; }
		public String toString() { return tipo; }
		
		public static tipoItem fromString(String texto) {
	        for (tipoItem tipo : tipoItem.values()) {
	            if (tipo.tipo.equalsIgnoreCase(texto)) {
	                return tipo;
	            }
	        }
	        throw new IllegalArgumentException("Estado de conservação inválido: " + texto);
	    }
	}
	
	private estadosConservacao conservacao;
	
	public Item(String modelo, String lojaOrigem, estadosConservacao conservacao, double preco) {
		setModelo(modelo);
		setLojaOrigem(lojaOrigem);
		setConservacao(conservacao);
		setPreco(preco);
		setNumeroDeUsos(0);
	}
	
	// getters
	public double getPreco() { return preco; }
	public String getLojaOrigem() { return lojaOrigem; }
	public String getModelo() { return modelo; }
	public estadosConservacao getConservacao() { return conservacao; }
	public int getNumeroDeUsos() { return numeroDeUsos; }
	public abstract String getTipo();
	
	// setters
	public void setNumeroDeUsos(int numeroDeUsos) { this.numeroDeUsos = numeroDeUsos; }
	public void setPreco(double preco) { this.preco = preco; }
	public void setLojaOrigem(String lojaOrigem) { this.lojaOrigem = lojaOrigem; }
	public void setModelo(String modelo) { this.modelo = modelo; }
	public void setConservacao(estadosConservacao conservacao) { this.conservacao = conservacao; }
	
	public boolean equals(Object obj) {
	    if (this == obj) return true;
	    if (obj == null || getClass() != obj.getClass()) return false;

	    Item outro = (Item) obj;
	    return Double.compare(outro.preco, preco) == 0 &&
	           numeroDeUsos == outro.numeroDeUsos &&
	           modelo.equals(outro.modelo) &&
	           lojaOrigem.equals(outro.lojaOrigem) &&
	           conservacao == outro.conservacao;
	}
	
	public int hashCode() {
	    return Objects.hash(modelo, lojaOrigem, preco, numeroDeUsos, conservacao);
	}
}
